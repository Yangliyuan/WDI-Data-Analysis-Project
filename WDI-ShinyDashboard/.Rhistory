install.packages('rmarkdown')
rmarkdown?
output: html_document
---
rmarkdown::all_output_formats()
rmarkdown?
rmarkdown
```{r cars, eval=FALSE}
{r cars, eval=FALSE}
r cars, eval=FALSE
summary(cars)
summary(cars)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```{r one}
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
title: "Untitled"
author: "Irene Yang"
output: html_document
toc:yes
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r one, warning=FALSE}
library(dplyr)
```
---
title: "Untitled"
author: "Irene Yang"
output: html_document
toc:yes
---
```{r one, warning=FALSE}
library(dplyr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
---
title: "Untitled"
author: "Irene Yang"
output:
html_document:
toc:yes
---
toc:yes
c(4,5,6)
c(11,12,13)
4:7
10:5
c(3,6,88)
5:10
x=c(1,3,5)
y=3:10
y
x<5
x=1:10
x<5
x=1:5
y=c(2,3,4,3,2)
log=x<5
log
x
library(dplyr)
print("hello")
8*8
4>9
Y=c(4,3,5,1,2)
Y[y]
y=c(4,3,5,1,2)
> y[y]
y=c(4,3,5,1,2)
y[y]
install.packages("stringr")
library(stringr)
str_detect(c("cat", "rat", "dog"), c("a"))
str_detect(c("cat")              , c("a","b","c") )
str_detect(c("cat", "rat", "dog"), c("a","b","c") )
install.packages("magrittr") # do this only once
library(magrittr)
c("a","b","c")         %>% str_detect(c("cat"), .)
c("cat", "rat", "dog") %>% str_detect(.       , c("a"))
c("cat", "rat", "dog") %>% str_detect("a")
c("cat", "rat", "dog") %>% {print(.); str_detect(., "a")}
3 %>% {print(.); sum(., .)}
3 %>% {print(.); sum(., .)} -> x
install.packages("magrittr")
cut(1:10, c(-inf, 3,6,inf))
cut(1:10, c(-Inf, 3,6,Inf))
Iris
Str(x)
Iris
Iris[3,4]
Iris
iris
iris[3,4]
Class(iris[3,4])
class (iris[3,4])
class(Iris[3, ])
class(iris[3, ])
class(iris[ , 5])
class(iris[ , 4])
iris[c(1,3), ]
str(iris)
list(4,6,3)
list(c(1,2,3),c("a","b",TRUE))
list(list(2,3), c("a","b",TRUE))
x=list(c(1,2,3), c("a","b", TRUE))
X
C (TRUE, FLASE, TRUE)
C (TRUE, FLASE, TRUE)
C (“a”,” b”,” c”)
C (TRUE, FLASE, TRUE)
as. Numeric (TRUE, FLASE)
C (“a”,” b”,” c”)
c (1,2,3)
c (“a”,” b”,” c”)
c(TRUE, FLASE, TRUE)
c ("a","" b"","" c"")
c(TRUE, FLASE, TRUE)
C (1,2,3)
C (1,2,3)
c(1,2,3)
c("a"","" b"," c"")
c("a","" b"," c"")
c("a"," b"," c")
c(TRUE,FLASE, TRUE)
c(1,2,3)
c("a"," b"," c")
c(TRUE,FLASE, TRUE)
c(1,2,3)
c("a"," b"," c")
c(TRUE,FALSE, TRUE)
z=c(100,200,300)
z[c(TRUE, FALSE, TRUE)]
zlog= z<210
zlog
z[zlog]
str(100: 200)
str(c(“a”,”b”,”c”))
str(c("a”,”b”,”c”))
W=4
3=z
2===4
str(100: 200)
str(100: 200)
str(100: 200)
str(100: 200)
str(100: 200)
var=
c(“blue”, “green”, “black”, “black”)
var1
summery(var1)
var1.fctr=factor(var1)
summery(var1.fctr)
var=c("blue”, “green”, “black”, “black”)
var1
summery(var1)
var1.fctr=factor(var1)
summery(var1.fctr)
var=c("blue", "green", "black", "black")
var=c("blue", "green", "black", "black")
var=c(blue", "green", "black", "black")
var=c("blue", "green", "black", "black")
var1
var=c("blue", "green", "black", "black")
var=c("blue", "green", "black", "black")
var1
var1=c("blue", "green", "black", "black")
var1
summery(var1)
var1=c("blue", "green", "black", "black")
var1
summary(var1)
var1.fctr=factor(var1)
summary(var1.fctr)
List(4,6,3)
list(c(1,2,3),c("a","b",TRUE))
list(list(2,3), c("a","b",TRUE))
List(4,6,3)
List (4,6,3)
list(4,6,3)
list(4,6,3)
list(c(1,2,3),c("a","b",TRUE))
list(list(2,3), c("a","b",TRUE))
1.	install.packages("magrittr") # do this only once
2.	library(magrittr)
3.	c("a","b","c")         %>% str_detect(c("cat"), .)
4.	c("cat", "rat", "dog") %>% str_detect(.       , c("a"))
5.	c("cat", "rat", "dog") %>% str_detect("a")
6.	c("cat", "rat", "dog") %>% {print(.); str_detect(., "a")}
7.	3 %>% {print(.); sum(., .)}
8.	3 %>% {print(.); sum(., .)} -> x
9.	x
install.packages("magrittr") # do this only once
library(magrittr)
c("a","b","c")         %>% str_detect(c("cat"), .)
c("cat", "rat", "dog") %>% str_detect(.       , c("a"))
c("cat", "rat", "dog") %>% str_detect("a")
c("cat", "rat", "dog") %>% {print(.); str_detect(., "a")}
3 %>% {print(.); sum(., .)}
3 %>% {print(.); sum(., .)} -> x
x
install.packages("magrittr") # do this only once
install.packages("magrittr")
library(magrittr)
c("a","b","c")         %>% str_detect(c("cat"), .)
c("a","b","c")         %>% str_detect(c("cat"), .)
c("a","b","c")         %>% str_detect(c("cat"), .)
c("a","b","c")%>% str_detect(c("cat"), .)
c("a","b","c")%>% str_detect(c ("cat"), .)
c("a","b","c")%>% str_detect(c ("cat"), .)
install.packages("stringr")
library(stringr)
str_detect(c("cat", "rat", "dog"), c("a"))
str_detect(c("cat")              , c("a","b","c") )
str_detect(c("cat", "rat", "dog"), c("a","b","c") )
c("a","b","c")%>% str_detect(c ("cat"), .)
c("cat", "rat", "dog") %>% str_detect(.       , c("a"))
c("cat", "rat", "dog") %>% str_detect("a")
c("cat", "rat", "dog") %>% {print(.); str_detect(., "a")}
3 %>% {print(.); sum(., .)}
3 %>% {print(.); sum(., .)} -> x
x
c(c(3,2,1),c(0,c(9,8,7)))
3 * c(1, 10, 100, 1000)
vec = c('x','y','z','a','b','c')
vec[3:4]
vec = c('x','y','z','a','b','c')
vec[c(-4, -2)]
vec[c(6,3,3,1)]
sum(vec) != vec
sum(vec)= vec
log = c(FALSE, TRUE, FALSE, TRUE)
log[!log]
vec = c(4,2,1,3)
vec[vec]
a = list(5:3, c(2,4), rep(c(1,2),3))
a[2]
a[[1]]
a = list(0:1, 1:4, c(50,50))
lapply(a, sum)
a = list(0:1, 1:4, c(50,50))
lapply(a, function(x) { length(x)*2 })
df = data.frame(a=1:3, b=4:6, c=7:9)
apply(X=df, MARGIN=1, max)
read.csv("/Users/Irene/Desktop/graduate/ma799/WDI_csv/WDI_Data.csv")
str(data)
field<-colnames(data)
field
data <- read.csv("/Users/Irene/Desktop/graduate/ma799/WDI_csv/WDI_Data.csv")
str(data)
field<-colnames(data)
field
data <- read.csv("/Users/Irene/Desktop/graduate/ma799/WDI-1-data")
data <- read.csv("/Users/Irene/Desktop/graduate/ma799/WDI-1-data.csv")
str(data)
field<-colnames(data)
field
data
dn<-data[,3]
dn<-data[,3]
unique(dn)
unidn<-unique(dn)
unidn
library(xlsx)
install.library("xlsx")
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
install.packeges("rJava",type='source')
install.packages("rJava",type='source')
install.packages("rJava", type = "source")
library(xlsx)
write.xlsx(unidn, "/Users/Irene/Desktop/graduate/ma799/unique_indicator_name.csv")
write.xlsx(unidn, "/Users/Irene/Desktop/graduate/ma799/unique_indicator_name.xlsx")
shiny::runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
wdi<-read.csv("~/Desktop/graduate/ma799/asst2-1/wdi.asst2.csv")
dev<-read.csv("~~/Desktop/graduate/ma799/asst2-1/High Income country code.csv")
wdi<-read.csv("~/Desktop/graduate/ma799/asst2-1/wdi.asst2.csv")
wdi<-read.csv("~/Desktop/graduate/ma799/asst2-1/wdi.asst2.csv")
dev<-read.csv("~/Desktop/graduate/ma799/asst2-1/High Income country code.csv")
runApp('Desktop/graduate/ma799/asst2-1/assignment')
wdi<-read.csv("~/Desktop/graduate/ma799/asst2-1/wdi.asst2.csv")
dev<-read.csv("~/Desktop/graduate/ma799/asst2-1/High Income country code.csv")
countries<-unique(wdi.df$country.code)
wdi %>%                       #spread indicate code into column
spread(., indicator.code, value) %>%
select(., -indicator.name) %>%
{.} -> wdi.df
wdi.df
library(plotly)
library(shinydashboard)
library(shiny)
library(plotly)
library(shiny)
library(dyplr)
library(dplyr)
wdi %>%                       #spread indicate code into column
spread(., indicator.code, value) %>%
select(., -indicator.name) %>%
{.} -> wdi.df
library(tdlyr)
install.packages(tdlyr)
library(tidyr)
wdi %>%                       #spread indicate code into column
spread(., indicator.code, value) %>%
select(., -indicator.name) %>%
{.} -> wdi.df
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
library(shinydashboard)
library(plotly)
wdi<-read.csv("~/Desktop/graduate/ma799/asst2-1/wdi.asst2.csv")
dev<-read.csv("~/Desktop/graduate/ma799/asst2-1/High Income country code.csv")
#group 2 types of countries
countries<-unique(wdi.df$country.code)
highIncome_Country<-unique(dev$Country.Code)
lowIncome_Country<-countries[!countries%in% highIncome_Country]
library(tidyr)
library(plotly)
wdi<-subset(wdi,select=-X)#remove rowNum
wdi<-wdi[!(is.na(wdi$value)),]#remove missing value
runApp('Desktop/graduate/ma799/asst2-1/assignment')
install.packages('reshape')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
wdi%>%
filter(country.code==input$selectAGE)%>%
{.}->wdi.df8
output$summaryage<-renderTable({
wdi%>%
filter(country.code==input$selectAGE)%>%
{.}->wdi.df8
summaryage<-summarise(wdi.df8,0014_Min=min(SP.POP.0014.TO.ZS,na.rm=TRUE),0014_Max=max(SP.POP.0014.TO.ZS,na.rm=TRUE)
,0014_Mean=mean(SP.POP.0014.TO.ZS,na.rm=TRUE),1564_Min=min(SP.POP.1564.TO.ZS,na.rm=TRUE),
1564_Max=max(SP.POP.1564.TO.ZS,na.rm=TRUE),1564_Mean=mean(SP.POP.1564.TO.ZS,na.rm=TRUE),
65UP_Min=min(SP.POP.65UP.TO.ZS,na.rm=TRUE),65UP_Max=max(SP.POP.65UP.TO.ZS,na.rm=TRUE),
65UP_Mean=mean(SP.POP.65UP.TO.ZS,na.rm=TRUE))
summaryage
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
wdi%>%
filter(country.code=='USA')%>%
{.}->wdi.df8
wdi.df8
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
shiny::runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
runApp('Desktop/graduate/ma799/asst2-1/assignment')
shiny::runApp('Desktop/graduate/ma799/asst2-1/assignment')
install.packages("lubricate")
runApp('Desktop/graduate/ma799/asst2-1/assignment')
setwd("~/Desktop/graduate/ma799/asst2-1/assignment")
runApp()
runApp()
runApp()
str(wdi.df)
runApp()
runApp()
?write.csv
write.csv(wdi.df,"wdi.df.csv",row.names = FALSE)
write.csv(wdi.df,"data/wdi.df.csv",row.names = FALSE)
wdi.df<-read.csv("data/wdi.df.csv")
str(wdi.df)
runApp()
